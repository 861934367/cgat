##########################################################
##########################################################
##########################################################
## Geneset annotations
##########################################################
[general]

# location of indexed genome 
genome=hg19

# location of indexed genome 
genome_dir=/ifs/mirror/genomes/plain

# location of indexed genome with faidx
faidx_dir=/ifs/mirror/genomes/faidx

# name of database
database=csvdb

# database options for csv2db script
csv2db_options=--backend=sqlite --retry --map=gene_id:str --map=contig:str --map=transcript_id:str 

# scratchdir for data not to be backed up
scratchdir=/tmp

# a version string
version=

##########################################################
##########################################################
##########################################################
[gaps]
# minimum gap size
min_size=100

##########################################################
##########################################################
##########################################################
[geneset]
# size of flank for annotating genome by geneset
flank=5000

# size of a promotor
promotor_size=5000

# size of gene territories
territories_radius=100000

# size for genestructures
[genestructures]
# extend each gene by 10kb in either direction
flank=10000

# annotate in intervals of 1kb.
increment=1000

##########################################################
##########################################################
##########################################################
# information about ENSEMBL gene set. The ENSEMBL gene set is imported
# from the dumps provided by ENSEMBL.
[ensembl]
  
filename_gtf=/ifs/mirror/ensembl/hg19/Homo_sapiens.GRCh37.60.gtf.gz
filename_pep=/ifs/mirror/ensembl/hg19/Homo_sapiens.GRCh37.60.pep.all.fa.gz
filename_cdna=/ifs/mirror/ensembl/hg19/Homo_sapiens.GRCh37.60.cdna.all.fa.gz

# biomart dataset to use

# to discover the dataset you need, open an R session and enter the commands:
## library(biomaRt)
## ensembl <- useMart(ensembl)
## listDatasets(ensembl)

biomart_dataset=hsapiens_gene_ensembl

# information about UCSC databases
[ucsc]
# UCSC database host
host=genome-mysql.cse.ucsc.edu

# UCSC database user name
user=genome

# UCSC database name
database=hg19

# repeats to collect as ',' separated list
repeattypes=DNA,LINE,SINE,LTR,Transposon

# RNA repeats to collect as ',' separated list
rnatypes=RNA,rRNA,scRNA,snRNA,srpRNA,tRNA

# Mappability track
mappability=mappability.bw

# local mirror directory for UCSC files
dir=/ifs/mirror/ucsc

# minimum mappability score to accept
min_mappability=0.5

##########################################################
##########################################################
##########################################################
# information about go ontology
[go]
# (ensembl) host
host=ensembldb.ensembl.org

# (ensembl) database#
# to get the database name try something like:
# mysql --user anonymous --port 5306 --host ensembldb.ensembl.org -e "show databases;" | grep mus | less
database=homo_sapiens_core_61_37f

# ensembl port
port=5306

# ontology location
url_ontology=http://www.geneontology.org/ontology/gene_ontology.obo

# goslim annotation
url_goslim=http://www.geneontology.org/GO_slims/goslim_goa.obo

# species to use when getting data from geneontology.org. See list
# at http://www.geneontology.org/GO.downloads.annotations.shtml
geneontology_species=human

##########################################################
##########################################################
##########################################################
[mapability]
# distance between segments - segments within this distance
# are joined
merge_distance=100

# minimum segment size - segments smaller than this are removed
min_segment_size=1000

##########################################################
##########################################################
##########################################################
## Options for gem created mapability information
[gem]
dir=

window_size=

threads=

mismatches=

max_indel_length=


##########################################################
##########################################################
##########################################################
[numts]
# minimum exonerate score for identification of numts
score=500

# mitochondrial genome
mitochrom=chrM

##########################################################
##########################################################
##########################################################
[segmentation]
# window size for G+C genome segmentation
window_size=10000

# number of G+C content bins
num_bins=8

# method to bin
method=equal-bases

# GCProfile options, see http://tubic.tju.edu.cn/GC-Profile/html/parameters.html
# for recommended values
# GCProfile minimum length
min_length=3000
# GCProfile: halting parameter
halting_parameter=500

##########################################################
##########################################################
##########################################################
[gwas]

# extend the region around each SNP by this amount
extension=150000


##########################################################
##########################################################
##########################################################

[KEGG]

#Warning: the KEGG datasource used here is no longer kept up to date.
#biomart mart to use for id lookup
mart=ensembl

#biomart dataset to look up id mapping from entrez gene ids to ensembl ids
# to discover the dataset you need, open an R session and enter the commands:
## library(biomaRt)
## ensembl <- useMart(ensembl)
## listDatasets(ensembl)

dataset=hsapiens_gene_ensembl


##########################################################
##########################################################
##########################################################
# output files created by this pipeline. These can be used
# to interface with other pipelines.
#
# Best not to change.
##########################################################
[interface]
# database
database=csvdb

# genome summary
genome_tsv=genome.tsv.gz

# the full gene set 
# no filtering, chromosome names are sanitized
geneset_all_gtf=geneset_all.gtf.gz

# gtf file with cds parts of transcripts
# CDS parts of transcripts is gene set
geneset_cds_gtf=geneset_cds.gtf.gz

# gtf file with exon parts of transcripts 
# all other features are removed
geneset_exons_gtf=geneset_exons.gtf.gz

# gtf file with exon parts of protein coding transcripts 
# all other features are removed
geneset_coding_exons_gtf=geneset_coding_exons.gtf.gz

# gtf file with exon parts of non-coding transcripts 
# all protein-coding features are removed
geneset_noncoding_exons_gtf=geneset_noncoding_exons.gtf.gz

# gtf file with exon parts of lincRNA transcripts 
geneset_lincrna_exons_gtf=geneset_lincrna_exons.gtf.gz

# flattened gene models 
# exons are merged within a transcript
# to create a single pseudo-transcript
# covering all exons in a gene
geneset_flat_gtf=geneset_flat.gtf.gz

# set with pseudogenes
pseudogenes_gtf=pseudogenes.gtf.gz

# set with numts
numts_gtf=numts.gtf.gz
	
# gff file annotation genomic regions with the transcript set
annotation_gff=annotation.gff.gz

# gff file annotation genomic regions by gene structure
genestructure_gff=genestructure.gff.gz

# fasta file with peptide sequences
peptides_fasta=peptides.fasta

# fasta file with cdna sequences
cdna_fasta=cdna.fasta

# fasta file with cds sequences
cds_fasta=cds.fasta

# table with contig size
contigs=contigs.tsv

# file with protein-coding transcripts
transcripts_bed=transcripts.bed.gz

# bed file with contig sizes
contigs_bed=contigs.bed.gz

# bed file with contigs excluding any gapped regions
contigs_ungapped_bed=contigs_ungapped.bed.gz

# bed file with gapped regions in contigs
gaps_bed=gaps.bed.gz

# file with transcription start sites
tss_bed=tss.bed.gz

# file with protein-coding transcripts
transcripts_gtf=transcripts.gtf.gz

# file with non-coding transcripts
noncoding_bed=noncoding.bed.gz

# file with non-coding genes
noncoding_genes_bed=noncoding.genes.bed.gz

# file with non-coding transcripts
noncoding_gtf=noncoding.gtf.gz

# file with lincRNA transcripts
lincrna_gtf=lincrna.gtf.gz

# file with lincRNA transcripts
lincrna_bed=lincrna.bed.gz

# file with transcription start sites per transcript
tss_bed=tss.transcript.bed.gz

# assign a single transcription start site per gene 
tss_gene_bed=tss.gene.bed.gz

# Build an interval covering all transcription start sites per gene
tss_gene_interval_bed=tss.gene.interval.bed.gz

# assign a single TSS per non-coding transcript
tss_gene_noncoding_bed=tss.gene.noncoding.bed.gz

# file with transcription termination sites per transcript
tts_bed=tts.transcript.bed.gz

# file with transcription termination sites per gene 
tts_gene_bed=tts.gene.bed.gz

# file with promotor regions
promotors_bed=promotors.bed.gz

# gff-formatted file with structural repeats
repeats_gff=repeats.gff.gz

# gff-formatted file with all repeats
allrepeats_gff=allrepeats.gff.gz

# gff-formatted file with rna annotations
rna_gff=rna.gff.gz

# bed-formatted file with genomic context
genomic_context_bed=genomic_context.bed.gz

# bed-formatted file with functional annotations
genomic_function_bed=genomic_function.bed.gz

# tsv-formatted file mapping terms to descriptions
genomic_function_tsv=genomic_function.tsv.gz

# table with GO assignments for genes
go=go.tsv.gz

# table with GOSlim assignments for genes
goslim=goslim.tsv.gz

# go table with terms from geneontology.ord
go_geneontology=go_geneontology.tsv.gz

# table with KEGG assignments for genes
kegg=kegg.tsv.gz

# obo file for go ontology
go_obo=go_ontology.obo

# obo file for goslim ontology
goslim_obo=goslim.obo

# gff file with gene territories
territories_gff=territories.gff.gz

# bed file with genome segmented into regions of similar G+C content
# using naive window based classification
gc_segmentation_bed=gc_segmentation.bed.gz

# bed file with genome segmented according to similar G+C content
# using the GCProfile method
gc_profile_bed=gcprofile_bins.bed.gz

# mapability
mapability_bed=mapability_%i.bed.gz

# filtered mapability file
mapability_filtered_bed=mapability_%i.filtered.bed.gz

# filename with gwas catalog intervals in bed format
gwas_catalog_bed=gwas_catalog.bed.gz

# filename with gwas distild intervals in bed format
gwas_distild_bed=gwas_distild.bed.gz

# filename with locations of CpG in bed format
cpg_bed=cpg.bed.gz

# AH: What are these for - please comment...
genic_gtf=genes.gtf.gz

genic_bed=genes.bed.gz

gene_tss_extended_bed=tss.gene.extended.bed.gz

upstream_flank_bed=upstream.flank.bed.gz

downstream_flank_bed=downstream.flank.bed.gz

intergenic_bed=intergenic.bed.gz

# tables in the database
table_genome=genome
table_transcript_info=transcript_info
table_gene_info=gene_info
table_gene_stats=table_gene_stats
table_protein_stats=protein_stats
table_cds_gtf=cds_gtf
table_go_assignments=go_assignments
table_goslim_assignments=goslim_assignments

################################################################
[report]
# number of threads to use to build the documentation
threads=10

# directory for html documentation
html=report/html

# directory for doctrees
doctrees=report/doctrees

# prefix for publishing
prefix=annotations_
